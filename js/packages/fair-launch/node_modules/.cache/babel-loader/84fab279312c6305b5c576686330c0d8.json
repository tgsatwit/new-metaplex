{"ast":null,"code":"import _regeneratorRuntime from\"/Users/timgillam/Documents/GitHub/metaplex_new/new-metaplex/js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/timgillam/Documents/GitHub/metaplex_new/new-metaplex/js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as anchor from'@project-serum/anchor';import{MintLayout,TOKEN_PROGRAM_ID,Token}from'@solana/spl-token';import{SystemProgram}from'@solana/web3.js';import{sendTransactionWithRetry}from'./connection';import{getAtaForMint,SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID}from'./utils';export var CANDY_MACHINE_PROGRAM=new anchor.web3.PublicKey('cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ');var TOKEN_METADATA_PROGRAM_ID=new anchor.web3.PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');export var awaitTransactionSignatureConfirmation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(txid,timeout,connection){var commitment,queryStatus,done,status,subId,_args3=arguments;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:commitment=_args3.length>3&&_args3[3]!==undefined?_args3[3]:'recent';queryStatus=_args3.length>4&&_args3[4]!==undefined?_args3[4]:false;done=false;status={slot:0,confirmations:0,err:null};subId=0;_context3.next=7;return new Promise(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve,reject){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setTimeout(function(){if(done){return;}done=true;console.log('Rejecting for timeout...');reject({timeout:true});},timeout);case 1:if(!(!done&&queryStatus)){_context2.next=7;break;}// eslint-disable-next-line no-loop-func\n_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var signatureStatuses;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return connection.getSignatureStatuses([txid]);case 3:signatureStatuses=_context.sent;status=signatureStatuses&&signatureStatuses.value[0];if(!done){if(!status){console.log('REST null result for',txid,status);}else if(status.err){console.log('REST error for',txid,status);done=true;reject(status.err);}else if(!status.confirmations){console.log('REST no confirmations for',txid,status);}else{console.log('REST confirmation for',txid,status);done=true;resolve(status);}}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);if(!done){console.log('REST connection error: txid',txid,_context.t0);}case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}))();_context2.next=5;return sleep(2000);case 5:_context2.next=1;break;case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x4,_x5){return _ref2.apply(this,arguments);};}());case 7:status=_context3.sent;//@ts-ignore\nif(connection._signatureSubscriptions[subId]){connection.removeSignatureListener(subId);}done=true;console.log('Returning status',status);return _context3.abrupt(\"return\",status);case 12:case\"end\":return _context3.stop();}}},_callee3);}));return function awaitTransactionSignatureConfirmation(_x,_x2,_x3){return _ref.apply(this,arguments);};}();/* export */var createAssociatedTokenAccountInstruction=function createAssociatedTokenAccountInstruction(associatedTokenAddress,payer,walletAddress,splTokenMintAddress){var keys=[{pubkey:payer,isSigner:true,isWritable:true},{pubkey:associatedTokenAddress,isSigner:false,isWritable:true},{pubkey:walletAddress,isSigner:false,isWritable:false},{pubkey:splTokenMintAddress,isSigner:false,isWritable:false},{pubkey:anchor.web3.SystemProgram.programId,isSigner:false,isWritable:false},{pubkey:TOKEN_PROGRAM_ID,isSigner:false,isWritable:false},{pubkey:anchor.web3.SYSVAR_RENT_PUBKEY,isSigner:false,isWritable:false}];return new anchor.web3.TransactionInstruction({keys:keys,programId:SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,data:Buffer.from([])});};export var getCandyMachineState=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(anchorWallet,candyMachineId,connection){var provider,idl,program,state,itemsAvailable,itemsRedeemed,itemsRemaining;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:provider=new anchor.Provider(connection,anchorWallet,{preflightCommitment:'recent'});_context4.next=3;return anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM,provider);case 3:idl=_context4.sent;program=new anchor.Program(idl,CANDY_MACHINE_PROGRAM,provider);_context4.next=7;return program.account.candyMachine.fetch(candyMachineId);case 7:state=_context4.sent;itemsAvailable=state.data.itemsAvailable.toNumber();itemsRedeemed=state.itemsRedeemed.toNumber();itemsRemaining=itemsAvailable-itemsRedeemed;return _context4.abrupt(\"return\",{id:candyMachineId,program:program,state:{itemsAvailable:itemsAvailable,itemsRedeemed:itemsRedeemed,itemsRemaining:itemsRemaining,isSoldOut:itemsRemaining===0,isActive:state.data.goLiveDate.toNumber()<new Date().getTime()/1000,goLiveDate:state.data.goLiveDate,treasury:state.wallet,tokenMint:state.tokenMint,config:state.config,price:state.data.price}});case 12:case\"end\":return _context4.stop();}}},_callee4);}));return function getCandyMachineState(_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();var getMasterEdition=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(mint){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer(),Buffer.from('edition')],TOKEN_METADATA_PROGRAM_ID);case 2:return _context5.abrupt(\"return\",_context5.sent[0]);case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function getMasterEdition(_x9){return _ref5.apply(this,arguments);};}();var getMetadata=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(mint){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer()],TOKEN_METADATA_PROGRAM_ID);case 2:return _context6.abrupt(\"return\",_context6.sent[0]);case 3:case\"end\":return _context6.stop();}}},_callee6);}));return function getMetadata(_x10){return _ref6.apply(this,arguments);};}();export var mintOneToken=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(candyMachine,payer){var mint,userTokenAccountAddress,userPayingAccountAddress,candyMachineAddress,remainingAccounts,signers,instructions,tokenAccount,transferAuthority,metadataAddress,masterEdition;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:mint=anchor.web3.Keypair.generate();_context7.next=3;return getAtaForMint(mint.publicKey,payer);case 3:userTokenAccountAddress=_context7.sent[0];_context7.next=6;return getAtaForMint(candyMachine.state.tokenMint,payer);case 6:userPayingAccountAddress=_context7.sent[0];candyMachineAddress=candyMachine.id;remainingAccounts=[];signers=[mint];_context7.t0=anchor.web3.SystemProgram;_context7.t1=payer;_context7.t2=mint.publicKey;_context7.t3=MintLayout.span;_context7.next=16;return candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(MintLayout.span);case 16:_context7.t4=_context7.sent;_context7.t5=TOKEN_PROGRAM_ID;_context7.t6={fromPubkey:_context7.t1,newAccountPubkey:_context7.t2,space:_context7.t3,lamports:_context7.t4,programId:_context7.t5};_context7.t7=_context7.t0.createAccount.call(_context7.t0,_context7.t6);_context7.t8=Token.createInitMintInstruction(TOKEN_PROGRAM_ID,mint.publicKey,0,payer,payer);_context7.t9=createAssociatedTokenAccountInstruction(userTokenAccountAddress,payer,payer,mint.publicKey);_context7.t10=Token.createMintToInstruction(TOKEN_PROGRAM_ID,mint.publicKey,userTokenAccountAddress,payer,[],1);instructions=[_context7.t7,_context7.t8,_context7.t9,_context7.t10];if(candyMachine.state.tokenMint){transferAuthority=anchor.web3.Keypair.generate();signers.push(transferAuthority);remainingAccounts.push({pubkey:userPayingAccountAddress,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:transferAuthority.publicKey,isWritable:false,isSigner:true});instructions.push(Token.createApproveInstruction(TOKEN_PROGRAM_ID,userPayingAccountAddress,transferAuthority.publicKey,payer,[],candyMachine.state.price.toNumber()));}_context7.next=27;return getMetadata(mint.publicKey);case 27:metadataAddress=_context7.sent;_context7.next=30;return getMasterEdition(mint.publicKey);case 30:masterEdition=_context7.sent;_context7.t11=instructions;_context7.next=34;return candyMachine.program.instruction.mintNft({accounts:{config:candyMachine.state.config,candyMachine:candyMachineAddress,payer:payer,wallet:candyMachine.state.treasury,mint:mint.publicKey,metadata:metadataAddress,masterEdition:masterEdition,mintAuthority:payer,updateAuthority:payer,tokenMetadataProgram:TOKEN_METADATA_PROGRAM_ID,tokenProgram:TOKEN_PROGRAM_ID,systemProgram:SystemProgram.programId,rent:anchor.web3.SYSVAR_RENT_PUBKEY,clock:anchor.web3.SYSVAR_CLOCK_PUBKEY},remainingAccounts:remainingAccounts.length>0?remainingAccounts:undefined});case 34:_context7.t12=_context7.sent;_context7.t11.push.call(_context7.t11,_context7.t12);if(tokenAccount){instructions.push(Token.createRevokeInstruction(TOKEN_PROGRAM_ID,userPayingAccountAddress,payer,[]));}_context7.prev=37;_context7.next=40;return sendTransactionWithRetry(candyMachine.program.provider.connection,candyMachine.program.provider.wallet,instructions,signers);case 40:return _context7.abrupt(\"return\",_context7.sent.txid);case 43:_context7.prev=43;_context7.t13=_context7[\"catch\"](37);console.log(_context7.t13);case 46:return _context7.abrupt(\"return\",'j');case 47:case\"end\":return _context7.stop();}}},_callee7,null,[[37,43]]);}));return function mintOneToken(_x11,_x12){return _ref7.apply(this,arguments);};}();export var shortenAddress=function shortenAddress(address){var chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;return\"\".concat(address.slice(0,chars),\"...\").concat(address.slice(-chars));};var sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};","map":{"version":3,"sources":["/Users/timgillam/Documents/GitHub/metaplex_new/new-metaplex/js/packages/fair-launch/src/candy-machine.ts"],"names":["anchor","MintLayout","TOKEN_PROGRAM_ID","Token","SystemProgram","sendTransactionWithRetry","getAtaForMint","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","CANDY_MACHINE_PROGRAM","web3","PublicKey","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","programId","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","Provider","preflightCommitment","Program","fetchIdl","idl","program","account","candyMachine","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","id","isSoldOut","isActive","goLiveDate","Date","getTime","treasury","wallet","tokenMint","config","price","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","mintOneToken","Keypair","generate","publicKey","userTokenAccountAddress","userPayingAccountAddress","candyMachineAddress","remainingAccounts","signers","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","createInitMintInstruction","createMintToInstruction","instructions","transferAuthority","push","createApproveInstruction","metadataAddress","masterEdition","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","length","undefined","tokenAccount","createRevokeInstruction","shortenAddress","address","chars","slice","ms"],"mappings":"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","sourcesContent":["import * as anchor from '@project-serum/anchor';\n\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\nimport { SystemProgram } from '@solana/web3.js';\nimport { sendTransactionWithRetry } from './connection';\n\nimport {\n  getAtaForMint,\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n} from './utils';\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  'cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ',\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n);\n\ninterface CandyMachineState {\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  config: anchor.web3.PublicKey;\n  treasury: anchor.web3.PublicKey;\n  tokenMint: anchor.web3.PublicKey;\n  isSoldOut: boolean;\n  isActive: boolean;\n  goLiveDate: anchor.BN;\n  price: anchor.BN;\n}\n\nexport interface CandyMachineAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: CandyMachineState;\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = 'recent',\n  queryStatus = false,\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log('REST no confirmations for', txid, status);\n            } else {\n              console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log('Returning status', status);\n  return status;\n};\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n};\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'recent',\n  });\n\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  return {\n    id: candyMachineId,\n    program,\n    state: {\n      itemsAvailable,\n      itemsRedeemed,\n      itemsRemaining,\n      isSoldOut: itemsRemaining === 0,\n      isActive: state.data.goLiveDate.toNumber() < new Date().getTime() / 1000,\n      goLiveDate: state.data.goLiveDate,\n      treasury: state.wallet,\n      tokenMint: state.tokenMint,\n      config: state.config,\n      price: state.data.price,\n    },\n  };\n};\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('edition'),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const userPayingAccountAddress = (\n    await getAtaForMint(candyMachine.state.tokenMint, payer)\n  )[0];\n\n  const candyMachineAddress = candyMachine.id;\n\n  const remainingAccounts = [];\n  const signers: anchor.web3.Keypair[] = [mint];\n  const instructions = [\n    anchor.web3.SystemProgram.createAccount({\n      fromPubkey: payer,\n      newAccountPubkey: mint.publicKey,\n      space: MintLayout.span,\n      lamports:\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n          MintLayout.span,\n        ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    Token.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      0,\n      payer,\n      payer,\n    ),\n    createAssociatedTokenAccountInstruction(\n      userTokenAccountAddress,\n      payer,\n      payer,\n      mint.publicKey,\n    ),\n    Token.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      userTokenAccountAddress,\n      payer,\n      [],\n      1,\n    ),\n  ];\n\n  let tokenAccount;\n  if (candyMachine.state.tokenMint) {\n    const transferAuthority = anchor.web3.Keypair.generate();\n\n    signers.push(transferAuthority);\n    remainingAccounts.push({\n      pubkey: userPayingAccountAddress,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: transferAuthority.publicKey,\n      isWritable: false,\n      isSigner: true,\n    });\n\n    instructions.push(\n      Token.createApproveInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        transferAuthority.publicKey,\n        payer,\n        [],\n        candyMachine.state.price.toNumber(),\n      ),\n    );\n  }\n  const metadataAddress = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  instructions.push(\n    await candyMachine.program.instruction.mintNft({\n      accounts: {\n        config: candyMachine.state.config,\n        candyMachine: candyMachineAddress,\n        payer,\n        wallet: candyMachine.state.treasury,\n        mint: mint.publicKey,\n        metadata: metadataAddress,\n        masterEdition,\n        mintAuthority: payer,\n        updateAuthority: payer,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n      },\n      remainingAccounts:\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\n    }),\n  );\n\n  if (tokenAccount) {\n    instructions.push(\n      Token.createRevokeInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        payer,\n        [],\n      ),\n    );\n  }\n  try {\n    return (\n      await sendTransactionWithRetry(\n        candyMachine.program.provider.connection,\n        candyMachine.program.provider.wallet,\n        instructions,\n        signers,\n      )\n    ).txid;\n  } catch (e) {\n    console.log(e);\n  }\n  return 'j';\n};\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n"]},"metadata":{},"sourceType":"module"}